import {  createSlice } from '@reduxjs/toolkit';

export interface IHomeState {
    currentName: string,
    viewType: string,
    status: string,
    sideBarHidden: boolean,
}

export const initialState: IHomeState = {
    currentName: "John Doe",
    viewType: "",
    status: "loading",
    sideBarHidden: false,
};

// The function below is called a thunk and allows us to perform async logic. It
// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This
// will call the thunk with the `dispatch` function as the first argument. Async
// code can then be executed and other actions can be dispatched. Thunks are
// typically used to make async requests.


const homeSlice = createSlice({
    name: 'home',
    initialState,
    // The `reducers` field lets us define reducers and generate associated actions
    reducers: {
        hideSideBar:(state)=>{
            state.sideBarHidden ? state.sideBarHidden=false: state.sideBarHidden=true
        },
        showSideBar:(state,action)=>{
            state.sideBarHidden=action.payload
        }
        // TODO : need to revist again.
    },
    // The `extraReducers` field lets the slice handle actions defined elsewhere,
    // including actions generated by createAsyncThunk or in other slices.
});

export const {hideSideBar,showSideBar}=homeSlice.actions
export default homeSlice.reducer;